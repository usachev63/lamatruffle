// Generated from /home/danila/SPbU/year4/VM/simplelanguage/lamalanguage/src/main/java/ru/usachev63/lamatruffle/parser/LamaLanguage.g4 by ANTLR 4.13.2
package ru.usachev63.lamatruffle.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class LamaLanguageLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, WS=16, COMMENT=17, 
		LINE_COMMENT=18, UIDENT=19, LIDENT=20, DECIMAL=21, STRING=22, CHAR=23;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "WS", "COMMENT", 
			"LINE_COMMENT", "NON_ZERO_DIGIT", "DIGIT", "UIDENT", "LIDENT", "DECIMAL", 
			"STRING", "CHAR"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'var'", "';'", "','", "'='", "':='", "'+'", "'-'", "'*'", "'/'", 
			"'%'", "'write'", "'('", "')'", "'true'", "'false'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, "WS", "COMMENT", "LINE_COMMENT", "UIDENT", "LIDENT", 
			"DECIMAL", "STRING", "CHAR"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public LamaLanguageLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "LamaLanguage.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0017\u00b0\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0004\u000f"+
		"a\b\u000f\u000b\u000f\f\u000fb\u0001\u000f\u0001\u000f\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0005\u0010k\b\u0010\n\u0010\f\u0010n\t"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0005\u0011y\b\u0011\n\u0011"+
		"\f\u0011|\t\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001"+
		"\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0005\u0014\u0086\b\u0014\n"+
		"\u0014\f\u0014\u0089\t\u0014\u0001\u0015\u0001\u0015\u0005\u0015\u008d"+
		"\b\u0015\n\u0015\f\u0015\u0090\t\u0015\u0001\u0016\u0003\u0016\u0093\b"+
		"\u0016\u0001\u0016\u0004\u0016\u0096\b\u0016\u000b\u0016\f\u0016\u0097"+
		"\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0005\u0017\u009e\b\u0017"+
		"\n\u0017\f\u0017\u00a1\t\u0017\u0001\u0017\u0001\u0017\u0001\u0018\u0001"+
		"\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001"+
		"\u0018\u0003\u0018\u00ad\b\u0018\u0001\u0018\u0001\u0018\u0001l\u0000"+
		"\u0019\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006"+
		"\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e"+
		"\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0000\'\u0000)\u0013+\u0014-\u0015"+
		"/\u00161\u0017\u0001\u0000\t\u0003\u0000\t\n\f\r  \u0002\u0000\n\n\r\r"+
		"\u0001\u000019\u0001\u000009\u0001\u0000AZ\u0004\u000009AZ__az\u0001\u0000"+
		"az\u0003\u0000\n\n\r\r\"\"\u0001\u0000\'\'\u00b9\u0000\u0001\u0001\u0000"+
		"\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000"+
		"\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000"+
		"\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000"+
		"\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000"+
		"\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000"+
		"\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000"+
		"\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000"+
		"\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000"+
		"#\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001"+
		"\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000"+
		"\u0000\u00001\u0001\u0000\u0000\u0000\u00013\u0001\u0000\u0000\u0000\u0003"+
		"7\u0001\u0000\u0000\u0000\u00059\u0001\u0000\u0000\u0000\u0007;\u0001"+
		"\u0000\u0000\u0000\t=\u0001\u0000\u0000\u0000\u000b@\u0001\u0000\u0000"+
		"\u0000\rB\u0001\u0000\u0000\u0000\u000fD\u0001\u0000\u0000\u0000\u0011"+
		"F\u0001\u0000\u0000\u0000\u0013H\u0001\u0000\u0000\u0000\u0015J\u0001"+
		"\u0000\u0000\u0000\u0017P\u0001\u0000\u0000\u0000\u0019R\u0001\u0000\u0000"+
		"\u0000\u001bT\u0001\u0000\u0000\u0000\u001dY\u0001\u0000\u0000\u0000\u001f"+
		"`\u0001\u0000\u0000\u0000!f\u0001\u0000\u0000\u0000#t\u0001\u0000\u0000"+
		"\u0000%\u007f\u0001\u0000\u0000\u0000\'\u0081\u0001\u0000\u0000\u0000"+
		")\u0083\u0001\u0000\u0000\u0000+\u008a\u0001\u0000\u0000\u0000-\u0092"+
		"\u0001\u0000\u0000\u0000/\u0099\u0001\u0000\u0000\u00001\u00a4\u0001\u0000"+
		"\u0000\u000034\u0005v\u0000\u000045\u0005a\u0000\u000056\u0005r\u0000"+
		"\u00006\u0002\u0001\u0000\u0000\u000078\u0005;\u0000\u00008\u0004\u0001"+
		"\u0000\u0000\u00009:\u0005,\u0000\u0000:\u0006\u0001\u0000\u0000\u0000"+
		";<\u0005=\u0000\u0000<\b\u0001\u0000\u0000\u0000=>\u0005:\u0000\u0000"+
		">?\u0005=\u0000\u0000?\n\u0001\u0000\u0000\u0000@A\u0005+\u0000\u0000"+
		"A\f\u0001\u0000\u0000\u0000BC\u0005-\u0000\u0000C\u000e\u0001\u0000\u0000"+
		"\u0000DE\u0005*\u0000\u0000E\u0010\u0001\u0000\u0000\u0000FG\u0005/\u0000"+
		"\u0000G\u0012\u0001\u0000\u0000\u0000HI\u0005%\u0000\u0000I\u0014\u0001"+
		"\u0000\u0000\u0000JK\u0005w\u0000\u0000KL\u0005r\u0000\u0000LM\u0005i"+
		"\u0000\u0000MN\u0005t\u0000\u0000NO\u0005e\u0000\u0000O\u0016\u0001\u0000"+
		"\u0000\u0000PQ\u0005(\u0000\u0000Q\u0018\u0001\u0000\u0000\u0000RS\u0005"+
		")\u0000\u0000S\u001a\u0001\u0000\u0000\u0000TU\u0005t\u0000\u0000UV\u0005"+
		"r\u0000\u0000VW\u0005u\u0000\u0000WX\u0005e\u0000\u0000X\u001c\u0001\u0000"+
		"\u0000\u0000YZ\u0005f\u0000\u0000Z[\u0005a\u0000\u0000[\\\u0005l\u0000"+
		"\u0000\\]\u0005s\u0000\u0000]^\u0005e\u0000\u0000^\u001e\u0001\u0000\u0000"+
		"\u0000_a\u0007\u0000\u0000\u0000`_\u0001\u0000\u0000\u0000ab\u0001\u0000"+
		"\u0000\u0000b`\u0001\u0000\u0000\u0000bc\u0001\u0000\u0000\u0000cd\u0001"+
		"\u0000\u0000\u0000de\u0006\u000f\u0000\u0000e \u0001\u0000\u0000\u0000"+
		"fg\u0005(\u0000\u0000gh\u0005*\u0000\u0000hl\u0001\u0000\u0000\u0000i"+
		"k\t\u0000\u0000\u0000ji\u0001\u0000\u0000\u0000kn\u0001\u0000\u0000\u0000"+
		"lm\u0001\u0000\u0000\u0000lj\u0001\u0000\u0000\u0000mo\u0001\u0000\u0000"+
		"\u0000nl\u0001\u0000\u0000\u0000op\u0005*\u0000\u0000pq\u0005)\u0000\u0000"+
		"qr\u0001\u0000\u0000\u0000rs\u0006\u0010\u0000\u0000s\"\u0001\u0000\u0000"+
		"\u0000tu\u0005-\u0000\u0000uv\u0005-\u0000\u0000vz\u0001\u0000\u0000\u0000"+
		"wy\b\u0001\u0000\u0000xw\u0001\u0000\u0000\u0000y|\u0001\u0000\u0000\u0000"+
		"zx\u0001\u0000\u0000\u0000z{\u0001\u0000\u0000\u0000{}\u0001\u0000\u0000"+
		"\u0000|z\u0001\u0000\u0000\u0000}~\u0006\u0011\u0000\u0000~$\u0001\u0000"+
		"\u0000\u0000\u007f\u0080\u0007\u0002\u0000\u0000\u0080&\u0001\u0000\u0000"+
		"\u0000\u0081\u0082\u0007\u0003\u0000\u0000\u0082(\u0001\u0000\u0000\u0000"+
		"\u0083\u0087\u0007\u0004\u0000\u0000\u0084\u0086\u0007\u0005\u0000\u0000"+
		"\u0085\u0084\u0001\u0000\u0000\u0000\u0086\u0089\u0001\u0000\u0000\u0000"+
		"\u0087\u0085\u0001\u0000\u0000\u0000\u0087\u0088\u0001\u0000\u0000\u0000"+
		"\u0088*\u0001\u0000\u0000\u0000\u0089\u0087\u0001\u0000\u0000\u0000\u008a"+
		"\u008e\u0007\u0006\u0000\u0000\u008b\u008d\u0007\u0005\u0000\u0000\u008c"+
		"\u008b\u0001\u0000\u0000\u0000\u008d\u0090\u0001\u0000\u0000\u0000\u008e"+
		"\u008c\u0001\u0000\u0000\u0000\u008e\u008f\u0001\u0000\u0000\u0000\u008f"+
		",\u0001\u0000\u0000\u0000\u0090\u008e\u0001\u0000\u0000\u0000\u0091\u0093"+
		"\u0005-\u0000\u0000\u0092\u0091\u0001\u0000\u0000\u0000\u0092\u0093\u0001"+
		"\u0000\u0000\u0000\u0093\u0095\u0001\u0000\u0000\u0000\u0094\u0096\u0007"+
		"\u0003\u0000\u0000\u0095\u0094\u0001\u0000\u0000\u0000\u0096\u0097\u0001"+
		"\u0000\u0000\u0000\u0097\u0095\u0001\u0000\u0000\u0000\u0097\u0098\u0001"+
		"\u0000\u0000\u0000\u0098.\u0001\u0000\u0000\u0000\u0099\u009f\u0005\""+
		"\u0000\u0000\u009a\u009e\b\u0007\u0000\u0000\u009b\u009c\u0005\"\u0000"+
		"\u0000\u009c\u009e\u0005\"\u0000\u0000\u009d\u009a\u0001\u0000\u0000\u0000"+
		"\u009d\u009b\u0001\u0000\u0000\u0000\u009e\u00a1\u0001\u0000\u0000\u0000"+
		"\u009f\u009d\u0001\u0000\u0000\u0000\u009f\u00a0\u0001\u0000\u0000\u0000"+
		"\u00a0\u00a2\u0001\u0000\u0000\u0000\u00a1\u009f\u0001\u0000\u0000\u0000"+
		"\u00a2\u00a3\u0005\"\u0000\u0000\u00a30\u0001\u0000\u0000\u0000\u00a4"+
		"\u00ac\u0005\'\u0000\u0000\u00a5\u00ad\b\b\u0000\u0000\u00a6\u00a7\u0005"+
		"\'\u0000\u0000\u00a7\u00ad\u0005\'\u0000\u0000\u00a8\u00a9\u0005\\\u0000"+
		"\u0000\u00a9\u00ad\u0005n\u0000\u0000\u00aa\u00ab\u0005\\\u0000\u0000"+
		"\u00ab\u00ad\u0005t\u0000\u0000\u00ac\u00a5\u0001\u0000\u0000\u0000\u00ac"+
		"\u00a6\u0001\u0000\u0000\u0000\u00ac\u00a8\u0001\u0000\u0000\u0000\u00ac"+
		"\u00aa\u0001\u0000\u0000\u0000\u00ad\u00ae\u0001\u0000\u0000\u0000\u00ae"+
		"\u00af\u0005\'\u0000\u0000\u00af2\u0001\u0000\u0000\u0000\u000b\u0000"+
		"blz\u0087\u008e\u0092\u0097\u009d\u009f\u00ac\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}